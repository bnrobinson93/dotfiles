"$schema" = "https://jj-vcs.github.io/jj/latest/config-schema.json"

[user]
name = "Brad R"
email = "31802085+bnrobinson93@users.noreply.github.com"

[revsets]
# Shows current, future, and ancestors all the way up to the nearest base, showing each bookmark if there are multiple
# then displays all heads of unrelated bookmarks
log = "@ | @- | curbranch::@ | @::nextbranch | bases | (heads(::parents(@) & bookmarks())::@) | mybranches | downstream(@, branchesandheads)"

[revset-aliases]
'closest_bookmark(to)' = 'heads(::to & bookmarks())'
'closest_pushable(to)' = 'heads(::to & mutable() & ~trunk() & ~description(exact:"") & (~empty() | merges()))'
'bases' = 'trunk() | present(develop) | present(feat/PEP-2386-dsp-v1-integration)'
'downstream(x,y)' = '(x::y) & y'
'mybranches' = 'downstream(trunk(), bookmarks()) & mine()'
'branchesandheads' = 'mybranches | (heads(trunk()::) & mine())'
'curbranch' = 'latest(mybranches::@- & mybranches)'
'nextbranch' = 'roots(@:: & branchesandheads)'

[aliases]
s = ["status"]
l = ["log", "--limit", "15"]
tug = [
  "bookmark",
  "move",
  "--from",
  "closest_bookmark(@)",
  "--to",
  "closest_pushable(@)",
]
check = ["util", "exec", "--", ".husky/pre-commit"]
push = [
  "util",
  "exec",
  "--",
  "sh",
  "-c",
  """
  if [[ -f .husky/pre-commit ]]; then
    jj check
  fi
  bookmark=$(jj log -r @ --no-graph -T 'bookmarks.join(" ")' | awk 'NR==1{gsub(/^\\*/,"",$1); gsub(/\\*$/, "", $1); print $1}')
  if [ -n "$bookmark" ]; then
    jj git push -b "$bookmark"
  else
    jj git push -c@ --allow-new
  fi
  """,
]

[commit]
sign = true

[ui]
default-command = [
  "log",
  "--limit",
  "15",
  "-T",
  "change_id.shortest(8) ++ ' - ' ++ label('bookmark', if(bookmarks, '(' ++ bookmarks.join(', ') ++ ') ', '')) ++ truncate_end(30, description.first_line(), '…') ++ ' ' ++ label('timestamp', '(' ++ committer.timestamp().ago() ++ ')') ++ ' ' ++ label('author', '<' ++ author.name() ++ '>') ++ ' ' ++ if(signature, label('signature', ' '), label('unsigned', ' '))",
]
diff-editor = ":builtin"

[colors]
signature = "blue"
unsigned = "cyan"

# this will be lazily signed again before pushing with sign-on-push; else use "own" to sign all changes
[signing]
behavior = "drop"
key = "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOIidIqt1fDMmhx1KUyCyKduIJCcJMhQk+f5vd6JEjsO"
backend = "ssh"

[core]
excludesfile = "~/.gitignore"

[signing.backends.ssh]
program = "ssh-sign-wrapper.sh"
allowed_signers = "~/.ssh/allowed_signers"

[git]
auto-local-bookmark = true
sign-on-push = true

[templates]
git_push_bookmark = '"" ++ change_id.short()'
